name: SRCINFO

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  run-srcinfo:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Run
        run: |
          function srcinfo() {
              local CARCH='CARCH_REPLACE' src sum vars a_sum var ar car aars bar ars rar \
                  known_hashsums_src=("b2" "sha512" "sha384" "sha256" "sha224" "sha1" "md5") \
                  known_archs_src=("amd64" "arm64" "armel" "armhf" "i386" "mips64el" "ppc64el" "riscv64" "s390x") \
                  allvars=("pkgname" "gives" "pkgver" "pkgrel" "epoch" "pkgdesc" "url" "priority") \
                  allars=("arch" "source" "depends" "makedepends" "checkdepends" "optdepends" "pacdeps" "conflicts" "breaks" \
                  "replaces" "provides" "incompatible" "compatible" "backup" "mask" "noextract" "nosubmodules" "license")
              source "${1}"
              for src in "${known_archs_src[@]}"; do
                  for vars in {source,depends,makedepends,optdepends,pacdeps,checkdepends,provides,conflicts,breaks,replaces}; do
                      allars+=("${vars}_${src}")
                  done
                  allvars+=("gives_${src}")
              done
              for sum in "${known_hashsums_src[@]}"; do
                  allars+=("${sum}sums")
                  for a_sum in "${known_archs_src[@]}"; do
                      allars+=("${sum}sums_${a_sum}")
                  done
              done
              for var in "${allvars[@]}"; do
                  declare -n "rar=${var}"
                  if [[ -n ${rar} ]]; then
                      rar="${rar//+([[:space:]])/ }"
                      rar="${rar#[[:space:]]}"
                      rar="${rar%[[:space:]]}"
                      echo "${var} = ${rar}"
                  fi
              done
              for ar in "${allars[@]}"; do
                  declare -n "bar=${ar}"
                  if [[ -n ${bar[@]} ]]; then
                      for ars in "${bar[@]}"; do
                          ars="${ars//+([[:space:]])/ }"
                          ars="${ars#[[:space:]]}"
                          ars="${ars%[[:space:]]}"
                          if [[ ${ars} =~ CARCH_REPLACE ]]; then
                              for aars in ${arch[@]}; do
                                  echo "${ar}_${aars} = ${ars}" | sed -e "s/CARCH_REPLACE/${aars}/g"
                              done
                          else
                              echo "${ar} = ${ars}"
                          fi
                      done
                  fi
              done
              unset "${allars[@]}" "${allvars[@]}"
          }
          for i in $(git diff HEAD~1 --name-only | grep -E '^packages/[^/]+/[^/]+\.pacscript$'); do
            srcinfo "$i" | tee ${i%/*.pacscript}/.SRCINFO > /dev/null
          done

      - name: Push
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "update \`.SRCINFO\` data" && git push origin HEAD:master || echo "Nothing to push."
